// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using click_imoveis.Models;

#nullable disable

namespace click_imoveis.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250503165657_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("click_imoveis.Models.Anuncio", b =>
                {
                    b.Property<int>("AnuncioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnuncioId"));

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Finalidade")
                        .HasColumnType("int");

                    b.Property<int?>("ImovelId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<float?>("Valor")
                        .HasColumnType("real");

                    b.Property<float?>("ValorCondominio")
                        .HasColumnType("real");

                    b.Property<float?>("ValorIptu")
                        .HasColumnType("real");

                    b.HasKey("AnuncioId");

                    b.HasIndex("ImovelId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("click_imoveis.Models.Comentario", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComentarioId"));

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImovelId")
                        .HasColumnType("int");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ComentarioId");

                    b.HasIndex("ImovelId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("click_imoveis.Models.Imovel", b =>
                {
                    b.Property<int>("ImovelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImovelId"));

                    b.Property<int>("Banheiros")
                        .HasColumnType("int");

                    b.Property<int>("Quartos")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ImovelId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("click_imoveis.Models.Mensagem", b =>
                {
                    b.Property<int>("MensagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MensagemId"));

                    b.Property<int?>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("MensagemId");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("click_imoveis.Models.Midia", b =>
                {
                    b.Property<int>("MidiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MidiaId"));

                    b.Property<int?>("ImovelId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDeMidia")
                        .HasColumnType("int");

                    b.HasKey("MidiaId");

                    b.HasIndex("ImovelId");

                    b.ToTable("Midias");
                });

            modelBuilder.Entity("click_imoveis.Models.PessoaFisica", b =>
                {
                    b.Property<int>("PessoaFisicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PessoaFisicaId"));

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PessoaFisicaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("PessoasFisicas");
                });

            modelBuilder.Entity("click_imoveis.Models.PessoaJuridica", b =>
                {
                    b.Property<int>("PessoaJuridicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PessoaJuridicaId"));

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PessoaJuridicaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("PessoasJuridicas");
                });

            modelBuilder.Entity("click_imoveis.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pessoa")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDeUsuario")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("click_imoveis.Models.Anuncio", b =>
                {
                    b.HasOne("click_imoveis.Models.Imovel", "Imovel")
                        .WithMany("Anuncios")
                        .HasForeignKey("ImovelId");

                    b.HasOne("click_imoveis.Models.Usuario", "Usuario")
                        .WithMany("Anuncios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Imovel");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("click_imoveis.Models.Comentario", b =>
                {
                    b.HasOne("click_imoveis.Models.Imovel", "Imovel")
                        .WithMany("Comentarios")
                        .HasForeignKey("ImovelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("click_imoveis.Models.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Imovel");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("click_imoveis.Models.Imovel", b =>
                {
                    b.HasOne("click_imoveis.Models.Usuario", "Usuario")
                        .WithMany("Imoveis")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("click_imoveis.Models.Mensagem", b =>
                {
                    b.HasOne("click_imoveis.Models.Anuncio", "Anuncio")
                        .WithMany("Mensagens")
                        .HasForeignKey("AnuncioId");

                    b.HasOne("click_imoveis.Models.Usuario", "Usuario")
                        .WithMany("Mensagens")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Anuncio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("click_imoveis.Models.Midia", b =>
                {
                    b.HasOne("click_imoveis.Models.Imovel", "Imovel")
                        .WithMany("Midias")
                        .HasForeignKey("ImovelId");

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("click_imoveis.Models.PessoaFisica", b =>
                {
                    b.HasOne("click_imoveis.Models.Usuario", "Usuario")
                        .WithOne("PessoaFisica")
                        .HasForeignKey("click_imoveis.Models.PessoaFisica", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("click_imoveis.Models.PessoaJuridica", b =>
                {
                    b.HasOne("click_imoveis.Models.Usuario", "Usuario")
                        .WithOne("PessoaJuridica")
                        .HasForeignKey("click_imoveis.Models.PessoaJuridica", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("click_imoveis.Models.Anuncio", b =>
                {
                    b.Navigation("Mensagens");
                });

            modelBuilder.Entity("click_imoveis.Models.Imovel", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("Comentarios");

                    b.Navigation("Midias");
                });

            modelBuilder.Entity("click_imoveis.Models.Usuario", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("Comentarios");

                    b.Navigation("Imoveis");

                    b.Navigation("Mensagens");

                    b.Navigation("PessoaFisica");

                    b.Navigation("PessoaJuridica");
                });
#pragma warning restore 612, 618
        }
    }
}
